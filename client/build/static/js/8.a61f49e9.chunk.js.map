{"version":3,"sources":["firebase/index.js","actions/settings.js","components/ProfilePictureModal.js","pages/Profile.js","components/NewPostForm.js","components/Loading.js","components/Post.js","components/Auth.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","API","api","ProfilePictureModal","props","state","file","cropper","React","createRef","onFileSelected","bind","onFileError","uploadPicture","this","setState","File","error","cogoToast","info","position","crop","current","getData","changeImage","visible","isVisible","onClose","toggleProfilePictureModal","animation","customStyles","height","width","className","style","maxWidth","dropActiveClassName","accepts","onChange","onError","maxFileSize","minFileSize","clickable","ref","src","preview","url","dragMode","zoomable","aspectRatio","viewMode","responsive","guides","onClick","disabled","Component","connect","app","profilePicModal","dispatch","binary","console","log","payload","FormData","append","JSON","stringify","patch","headers","accept","_boundary","then","res","updatePostsPicture","response","path","updateProfilePicture","setProfilePic","catch","e","Profile","openProfilePictureModal","updateDescription","initializeProfile","prevProps","prevState","snapshot","location","restartState","restartStatePosts","profileId","match","params","id","fetchUserPosts","fetchProfile","ownsProfile","preventDefault","description","target","value","profile","warn","length","Promise","resolve","changeDescription","toggleEditingDescription","visibleSidenav","alt","profilePic","username","editingDescription","onSubmit","defaultValue","maxLength","type","posts","likes","onBottom","scrollRef","Auth","openProfile","NewPostForm","map","post","i","Post","key","message","postsLoading","Loading","classes","logged","ownProfile","items","loading","code","setDescription","newDescription","toggleNavbar","toggleSidenav","newPost","logout","youtubeInput","randomPhrasesTextarea","selectedPlaceholderPhrase","handleNewPost","getRandomQuote","toggleYoutubeInput","rand","Math","floor","random","extra","extraType","name","required","placeholder","deletePost","canDeleteIt","handleLike","parseText","dayjs","extend","relativeTime","postId","_id","session","author","split","liked","unlikePost","likePost","from","createdAt","to","properties","videoId","opts","isLogged","data","withRouter","shouldDisplay","whenLogged","children"],"mappings":"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","file":"static/js/8.a61f49e9.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyBbs0O_ZQuYV2n12TRSK__9-wxCTbHRQpU\",\r\n  authDomain: \"media-59eb0.firebaseapp.com\",\r\n  databaseURL: \"https://media-59eb0.firebaseio.com\",\r\n  projectId: \"media-59eb0\",\r\n  storageBucket: \"media-59eb0.appspot.com\",\r\n  messagingSenderId: \"444793252027\",\r\n  appId: \"1:444793252027:web:ffd8ee7dade748c6be619e\",\r\n  measurementId: \"G-PM1GHN9196\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst storage = firebase.storage;\r\n\r\nexport { storage, firebaseConfig as default };\r\n","// import axios from 'axios';\r\nimport FormData from \"form-data\";\r\nimport {\r\n  setProfilePic,\r\n  setDescription,\r\n  toggleProfilePictureModal,\r\n} from \"../actions/app\";\r\nimport { updatePostsPicture } from \"../actions/posts\";\r\nimport { updateProfilePicture } from \"../actions/profile\";\r\n\r\nimport api from \"../api/api\";\r\nimport { storage } from \"../firebase/index\";\r\n\r\nconst API = new api();\r\n\r\nexport const CHANGE_IMAGE = \"CHANGE_IMAGE\",\r\n  CHANGE_DESCRIPTION = \"CHANGE_DESCRIPTION\";\r\n\r\nexport const changeImage = (binary, crop) => {\r\n  console.log(\"binary\", binary);\r\n  return (dispatch) => {\r\n    const payload = new FormData();\r\n    payload.append(\"crop\", JSON.stringify(crop));\r\n    payload.append(\"newImage\", binary);\r\n    API.patch(`user/settings/profilePicture`, payload, {\r\n      headers: {\r\n        accept: \"application/json\",\r\n        \"Accept-Language\": \"en-US,en;q=0.8\",\r\n        \"Content-Type\": `multipart/form-data; boundary=${payload._boundary}`,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(\"res\", res);\r\n        dispatch(toggleProfilePictureModal());\r\n        dispatch(updatePostsPicture(res.response.path));\r\n        dispatch(updateProfilePicture(res.response.path));\r\n        dispatch(setProfilePic(res.response.path));\r\n      })\r\n      .catch((e) => console.log(e));\r\n\r\n    // const uploadTask = storage.ref(`images/${binary.name}`).put(binary);\r\n    // // const task = storage.ref();\r\n    // uploadTask.on(\r\n    //   \"state_changed\",\r\n    //   (snapshot) => {\r\n    //     // progress\r\n    //   },\r\n    //   (error) => {\r\n    //     // error function\r\n    //   },\r\n    //   () => {\r\n    //     storage\r\n    //       .ref(\"images\")\r\n    //       .child(binary.name)\r\n    //       .getDownloadURL()\r\n    //       .then((url) => API.patch(\"user/settings/profilePicture\", url))\r\n    //       .then((res) => {\r\n    //         console.log(\"res\", res);\r\n    //       });\r\n    //   }\r\n    // );\r\n  };\r\n};\r\n\r\nexport const changeDescription = (description) => {\r\n  return (dispatch) => {\r\n    API.patch(`user/settings/description`, { description })\r\n      .then((res) => {\r\n        if (res.code === 200)\r\n          dispatch(setDescription(res.response.newDescription));\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Files from \"react-files\";\r\nimport Rodal from \"rodal\";\r\nimport { storage } from \"../firebase\";\r\nimport Cropper from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\nimport cogoToast from \"cogo-toast\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeImage } from \"../actions/settings\";\r\nimport { toggleProfilePictureModal } from \"../actions/app\";\r\n\r\nclass ProfilePictureModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      file: null,\r\n    };\r\n\r\n    this.cropper = React.createRef();\r\n\r\n    this.onFileSelected = this.onFileSelected.bind(this);\r\n    this.onFileError = this.onFileError.bind(this);\r\n    this.uploadPicture = this.uploadPicture.bind(this);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState(() => ({\r\n      file: null,\r\n    }));\r\n  }\r\n\r\n  onFileSelected(File) {\r\n    // console.log(File);\r\n    this.setState(() => ({\r\n      file: File[0],\r\n    }));\r\n  }\r\n\r\n  onFileError(error) {\r\n    cogoToast.info(`Whoops, there was a problem with the image 🙈.`, {\r\n      position: \"bottom-right\",\r\n    });\r\n  }\r\n\r\n  uploadPicture() {\r\n    const crop = this.cropper.current.cropper.getData();\r\n    // console.log(\"crop\", crop);\r\n\r\n    this.props.changeImage(this.state.file, crop);\r\n  }\r\n\r\n  render() {\r\n    const modalCustomStyles = {\r\n      height: \"fit-content\",\r\n      width: \"fit-content\",\r\n    };\r\n\r\n    return (\r\n      <Rodal\r\n        visible={this.props.isVisible}\r\n        onClose={this.props.toggleProfilePictureModal}\r\n        animation={\"slideUp\"}\r\n        customStyles={modalCustomStyles}\r\n      >\r\n        <div className=\"mt-4\" style={{ maxWidth: \"400px\" }}>\r\n          {!this.state.file && (\r\n            <Files\r\n              className=\"dropzone mt-2\"\r\n              dropActiveClassName=\"dropzone--active\"\r\n              accepts={[\"image/png\", \"image/jpg\", \"image/jpeg\"]}\r\n              onChange={this.onFileSelected}\r\n              onError={this.onFileError}\r\n              maxFileSize={10000000}\r\n              minFileSize={0}\r\n              clickable\r\n            >\r\n              <div className=\"d-flex flex-column h-100 justify-content-center\">\r\n                <h2 className=\"text-center\">\r\n                  <i className=\"far fa-file-image\"></i>\r\n                </h2>\r\n                <p className=\"text-center mb-0\">\r\n                  Drag and drop your image here or...\r\n                </p>\r\n                <p className=\"text-center mb-0 btn-link cursor-pointer\">\r\n                  Upload one from your device\r\n                </p>\r\n              </div>\r\n            </Files>\r\n          )}\r\n          {this.state.file && (\r\n            <Cropper\r\n              ref={this.cropper}\r\n              src={this.state.file.preview.url}\r\n              style={{ height: 500, width: \"100%\" }}\r\n              dragMode=\"move\"\r\n              zoomable={false}\r\n              aspectRatio={1}\r\n              viewMode={2}\r\n              responsive={true}\r\n              guides={false}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"float-right mt-2\">\r\n          <button\r\n            className=\"btn btn-brand-secondary text-white mt-2\"\r\n            onClick={this.props.toggleProfilePictureModal}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            className=\"btn btn-brand text-white ml-1 mt-2\"\r\n            onClick={this.uploadPicture}\r\n            disabled={!this.state.file}\r\n          >\r\n            Upload\r\n          </button>\r\n        </div>\r\n      </Rodal>\r\n    );\r\n  }\r\n}\r\n\r\nconst stateToProps = (state) => ({\r\n  isVisible: state.app.profilePicModal.isVisible,\r\n});\r\n\r\nconst dispatchToProps = (dispatch) => ({\r\n  changeImage: (binary, crop) => dispatch(changeImage(binary, crop)),\r\n  toggleProfilePictureModal: () => dispatch(toggleProfilePictureModal()),\r\n});\r\n\r\nexport default connect(stateToProps, dispatchToProps)(ProfilePictureModal);\r\n","import React, { Component } from \"react\";\r\nimport { changeDescription } from \"../actions/settings\";\r\nimport { toggleNavbar, toggleProfilePictureModal } from \"../actions/app\";\r\nimport {\r\n  fetchProfile,\r\n  restartState,\r\n  toggleSidenav,\r\n  toggleEditingDescription,\r\n} from \"../actions/profile\";\r\nimport {\r\n  fetchUserPosts,\r\n  newPost,\r\n  restartState as restartStatePosts,\r\n} from \"../actions/posts\";\r\nimport BottomScrollListener from \"react-bottom-scroll-listener\";\r\nimport { connect } from \"react-redux\";\r\nimport Post from \"../components/Post\";\r\nimport NewPostForm from \"../components/NewPostForm\";\r\nimport ProfilePictureModal from \"../components/ProfilePictureModal\";\r\nimport Loading from \"../components/Loading\";\r\nimport cogoToast from \"cogo-toast\";\r\n\r\nimport { logout } from \"../actions/app\";\r\nimport Auth from \"../components/Auth\";\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.openProfilePictureModal = this.openProfilePictureModal.bind(this);\r\n    this.updateDescription = this.updateDescription.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initializeProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.location !== prevProps.location) {\r\n      this.props.restartState();\r\n      this.props.restartStatePosts();\r\n      this.initializeProfile();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.restartState();\r\n    this.props.restartStatePosts();\r\n  }\r\n\r\n  fetchUserPosts() {\r\n    const profileId = this.props.match.params.id;\r\n\r\n    this.props.fetchUserPosts(profileId);\r\n  }\r\n\r\n  initializeProfile() {\r\n    this.props.fetchProfile(this.props.match.params.id);\r\n    this.fetchUserPosts();\r\n  }\r\n\r\n  openProfilePictureModal() {\r\n    if (this.props.ownsProfile) {\r\n      this.props.toggleProfilePictureModal();\r\n    }\r\n  }\r\n\r\n  updateDescription(e) {\r\n    e.preventDefault();\r\n    const description = e.target.description.value;\r\n\r\n    if (this.props.profile.description === description) {\r\n      cogoToast.warn(\r\n        <p>\r\n          Write something about you!!\r\n          <strong>descriptions are the same</strong>\r\n        </p>,\r\n        {\r\n          position: \"bottom-right\",\r\n        }\r\n      );\r\n    } else if (description.length > 150) {\r\n      cogoToast.warn(\"Descriptions shouldn't be longer than 150 characters\", {\r\n        position: \"bottom-right\",\r\n      });\r\n    } else {\r\n      Promise.resolve(this.props.changeDescription(description)).then(() =>\r\n        this.props.toggleEditingDescription()\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.props);\r\n    return (\r\n      // <div></div>\r\n      <div className=\"d-flex flex-column flex-md-row profile w-100\">\r\n        {this.props.profilePicModal && this.props.ownsProfile && (\r\n          <ProfilePictureModal />\r\n        )}\r\n        <div\r\n          className={\r\n            \"d-none d-md-flex sidenav flex-column \" +\r\n            (!this.props.profile.visibleSidenav ? \"sidenav--inactive\" : \"\")\r\n          }\r\n        >\r\n          <div className=\"sidenav__description\">\r\n            <div\r\n              onClick={this.openProfilePictureModal}\r\n              className={\r\n                \"sidenav__avatar mx-auto d-block mt-5 mb-2\" +\r\n                (this.props.ownsProfile &&\r\n                  \" sidenav__avatar--owner cursor-pointer\")\r\n              }\r\n            >\r\n              <img\r\n                alt=\"\"\r\n                src={this.props.profile.profilePic}\r\n                className={\r\n                  \"sidenav__avatar__image img-fluid rounded-circle mx-auto d-block w-100 h-100\"\r\n                }\r\n              />\r\n              <span className=\"sidenav__avatar--owner__camera\">\r\n                <i className=\"fas fa-camera\"></i>\r\n              </span>\r\n            </div>\r\n            <p className=\"text-center text-dark title mt-3\">\r\n              {this.props.profile.username}\r\n            </p>\r\n            {this.props.profile.editingDescription ? (\r\n              <div className=\"px-5 mb-3\">\r\n                <form onSubmit={this.updateDescription}>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className=\"form-control\"\r\n                      id=\"description\"\r\n                      defaultValue={this.props.profile.description}\r\n                      maxLength={150}\r\n                    ></textarea>\r\n                  </div>\r\n                  <div className=\"form-group d-flex justify-content-end\">\r\n                    <button\r\n                      className=\"btn btn-brand-secondary text-white mr-2 rounded-pill\"\r\n                      type=\"button\"\r\n                      onClick={this.props.toggleEditingDescription}\r\n                    >\r\n                      Cancel\r\n                    </button>\r\n                    <button className=\"btn btn-brand text-white rounded-pill\">\r\n                      Update\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            ) : (\r\n              <p className=\"text-left text-white text-wrap description px-5 mb-0\">\r\n                {this.props.profile.description ||\r\n                  \"It seems this user hasn't provided a description 🥴!\"}\r\n              </p>\r\n            )}\r\n            {this.props.ownsProfile && !this.props.profile.editingDescription && (\r\n              <a\r\n                className=\"text-left btn-link text-warning font-weight-bolder mt-3 btn px-5\"\r\n                onClick={this.props.toggleEditingDescription}\r\n              >\r\n                Edit description <i className=\"fas fa-pencil-alt\"></i>\r\n              </a>\r\n            )}\r\n            <div className=\"d-flex flex-column justify-content-between h-100\">\r\n              <div className=\"d-flex justify-content-between px-5\">\r\n                <div>\r\n                  <p className=\"text-primary font-weight-bolder mb-0 mt-3\">\r\n                    {this.props.profile.posts} Posts\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-danger font-weight-bolder mb-0 mt-3\">\r\n                    {this.props.profile.likes} Likes\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <BottomScrollListener\r\n          onBottom={() => {\r\n            this.setState(() => ({ ...this.state }));\r\n            this.fetchUserPosts();\r\n          }}\r\n        >\r\n          {(scrollRef) => (\r\n            <div\r\n              className=\"d-flex position-relative profile__body justify-content-center flex-wrap\"\r\n              ref={scrollRef}\r\n            >\r\n              <Auth>\r\n                {this.props.profile.openProfile || this.props.ownsProfile ? (\r\n                  <div className=\"profile__body__textarea w-100 mt-5\">\r\n                    <div className=\"card border-0\">\r\n                      <div className=\"card-body\">\r\n                        <NewPostForm profileId={this.props.match.params.id} />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <p className=\"mt-5\">\r\n                    <i className=\"fas fa-lock\"></i> This user doesn't allow\r\n                    posts on his profile.\r\n                  </p>\r\n                )}\r\n              </Auth>\r\n              <div className=\"profile__body__posts w-100\">\r\n                <div className=\"d-flex flex-column\">\r\n                  {this.props.posts.map((post, i) => (\r\n                    <Post {...post} key={post.message + \"_\" + i} />\r\n                  ))}\r\n                  {this.props.postsLoading && (\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <Loading classes=\"my-5\" />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </BottomScrollListener>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst stateToProps = (state) => ({\r\n  logged: state.app.logged,\r\n  ownsProfile: state.profile.ownProfile,\r\n  profilePicModal: state.app.profilePicModal.isVisible,\r\n  profile: state.profile,\r\n  posts: state.posts.items,\r\n  postsLoading: state.posts.loading,\r\n});\r\n\r\nconst dispatchToProps = (dispatch) => ({\r\n  changeDescription: (description) => dispatch(changeDescription(description)),\r\n  toggleNavbar: (value) => dispatch(toggleNavbar(value)),\r\n  toggleProfilePictureModal: () => dispatch(toggleProfilePictureModal()),\r\n  toggleSidenav: () => dispatch(toggleSidenav()),\r\n  fetchProfile: (value) => dispatch(fetchProfile(value)),\r\n  newPost: (value) => dispatch(newPost(value)),\r\n  fetchUserPosts: (value) => dispatch(fetchUserPosts(value)),\r\n  restartState: () => dispatch(restartState()),\r\n  toggleEditingDescription: () => dispatch(toggleEditingDescription()),\r\n  restartStatePosts: () => dispatch(restartStatePosts()),\r\n  logout: () => dispatch(logout()),\r\n});\r\n\r\nexport default connect(stateToProps, dispatchToProps)(Profile);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { newPost } from \"../actions/posts\";\r\n\r\nclass NewPostForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      youtubeInput: false,\r\n      randomPhrasesTextarea: [\r\n        \"What are you thinking?\",\r\n        \"It's a beautiful day isn't it\",\r\n        \"Tell us a story, i know you're not boring ♪\",\r\n        \"In many ways, still miss good old days.\",\r\n      ],\r\n      selectedPlaceholderPhrase: null,\r\n    };\r\n\r\n    this.handleNewPost = this.handleNewPost.bind(this);\r\n    this.getRandomQuote = this.getRandomQuote.bind(this);\r\n    this.toggleYoutubeInput = this.toggleYoutubeInput.bind(this);\r\n  }\r\n\r\n  componentWillUnmount() {}\r\n\r\n  componentDidMount() {\r\n    this.getRandomQuote();\r\n  }\r\n\r\n  toggleYoutubeInput() {\r\n    this.setState((prevState) => ({\r\n      youtubeInput: !prevState.youtubeInput,\r\n    }));\r\n  }\r\n\r\n  getRandomQuote() {\r\n    const rand = Math.floor(\r\n      Math.random() * this.state.randomPhrasesTextarea.length\r\n    );\r\n    this.setState({\r\n      selectedPlaceholderPhrase: this.state.randomPhrasesTextarea[rand],\r\n    });\r\n  }\r\n\r\n  handleNewPost(e) {\r\n    e.preventDefault();\r\n\r\n    this.props.newPost({\r\n      username: this.props.profileId,\r\n      message: e.target.message.value,\r\n      extra: {\r\n        value: e.target.extra.value,\r\n        extraType: \"youtube\",\r\n      },\r\n    });\r\n\r\n    e.target.message.value = \"\";\r\n    e.target.extra.value = \"\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"d-flex\">\r\n        <div className=\"mr-4 d-none d-md-block\">\r\n          <img\r\n            alt=\"\"\r\n            src={this.props.logged.profilePic}\r\n            className=\"d-block mx-auto rounded-circle border\"\r\n            style={{ width: \"75px\" }}\r\n          />\r\n        </div>\r\n        <div className=\"mt-2 w-100\">\r\n          <form onSubmit={this.handleNewPost}>\r\n            <div className=\"form-group\">\r\n              <textarea\r\n                id=\"message\"\r\n                name=\"message\"\r\n                className=\"form-control border-top-0 border-left-0 border-right-0 border-brand rounded-0 profile__body__textarea__input\"\r\n                required\r\n                placeholder={this.state.selectedPlaceholderPhrase}\r\n              ></textarea>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                name=\"extra\"\r\n                id=\"extra\"\r\n                className={\r\n                  \"form-control mt-2 \" +\r\n                  (this.state.youtubeInput ? \"d-flex\" : \"d-none\")\r\n                }\r\n                placeholder=\"https://www.youtube.com/watch?v=dO368WjwyFs\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-brand rounded-pill float-right text-white\"\r\n              >\r\n                <i className=\"fas fa-paper-plane\"></i> Submit\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={this.toggleYoutubeInput}\r\n                className=\"btn btn-brand-secondary text-white rounded-pill float-right px-3 mx-2\"\r\n              >\r\n                <i className=\"fab fa-youtube\"></i> Youtube\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst stateToProps = (state) => ({\r\n  logged: state.app.logged,\r\n  profile: state.profile,\r\n});\r\n\r\nconst dispatchToProps = (dispatch) => ({\r\n  newPost: (value) => dispatch(newPost(value)),\r\n});\r\n\r\nexport default connect(stateToProps, dispatchToProps)(NewPostForm);\r\n","import React from 'react';\r\n\r\nexport default (props) => (\r\n\t<div className={'spinner-border text-brand' + ' ' + props.classes}>\r\n\t\t<span className=\"sr-only\">Loading...</span>\r\n\t</div>\r\n);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\nimport dayjs from \"dayjs\";\r\nimport { likePost, unlikePost, deletePost } from \"../actions/posts\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Linkify from \"react-linkify\";\r\nimport cogoToast from \"cogo-toast\";\r\nimport YouTube from \"react-youtube\";\r\n\r\nclass Post extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.deletePost = this.deletePost.bind(this);\r\n    this.canDeleteIt = this.canDeleteIt.bind(this);\r\n    this.handleLike = this.handleLike.bind(this);\r\n    this.parseText = this.parseText.bind(this);\r\n\r\n    dayjs.extend(relativeTime);\r\n  }\r\n\r\n  deletePost() {\r\n    this.props.deletePost({ postId: this.props._id });\r\n  }\r\n\r\n  canDeleteIt() {\r\n    if (this.props.session._id && this.props.author._id) {\r\n      // If i own the post.\r\n      return this.props.session._id === this.props.author._id;\r\n    } else if (this.props.session.username && this.props.match.params.id) {\r\n      // If the post is in my profile, even if i don't own it.\r\n      return this.props.session.username === this.props.match.params.id;\r\n    }\r\n  }\r\n\r\n  parseText() {\r\n    const reg = /(http:\\/\\/|https:\\/\\/)((\\w|=|\\?|\\.|\\/|&|-)+)/g;\r\n    const textFractions = this.props.message.split;\r\n  }\r\n\r\n  handleLike() {\r\n    if (!this.props.logged) {\r\n      return cogoToast.warn(`You must be logged in to perform this action 😢`, {\r\n        position: \"bottom-right\",\r\n      });\r\n    }\r\n\r\n    if (this.props.liked) {\r\n      this.props.unlikePost(this.props._id);\r\n    } else {\r\n      this.props.likePost(this.props._id);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card w-100 my-5 post\">\r\n        <div className=\"card-header bg-white pb-0 border-0 d-flex justify-content-between\">\r\n          <div>\r\n            <small className=\"text-muted\">\r\n              {dayjs().from(dayjs(this.props.createdAt))} ago.\r\n            </small>\r\n          </div>\r\n          <div className=\"d-flex\">\r\n            <div>\r\n              <Link to={\"/u/\" + this.props.author.username}>\r\n                {this.props.author.username}\r\n              </Link>\r\n            </div>\r\n            <div className=\"post__avatar ml-2\">\r\n              <Link to={\"/u/\" + this.props.author.username}>\r\n                <img\r\n                  alt=\"\"\r\n                  src={this.props.author.profilePic}\r\n                  className=\"img-fluid cursor-pointer rounded-circle\"\r\n                />\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-body px-4 py-4\">\r\n          <Linkify properties={{ target: \"_blank\" }}>\r\n            <p className=\"my-0 py-0 ws-pre-line\">{this.props.message}</p>\r\n          </Linkify>\r\n          {this.props.extra && (\r\n            <div className=\"mt-3\">\r\n              <YouTube\r\n                videoId={this.props.extra.value}\r\n                opts={{\r\n                  width: \"100%\",\r\n                  height: \"400\",\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n          <div\r\n            onClick={this.handleLike}\r\n            className=\"d-inline-flex px-3 py-1 text-brand-secondary rounded-pill post__likes cursor-pointer\"\r\n          >\r\n            <span>\r\n              {this.props.likes}{\" \"}\r\n              <i\r\n                className={`mr-1 ${\r\n                  this.props.liked ? \"fas fa-heart\" : \"far fa-heart\"\r\n                }`}\r\n              ></i>\r\n            </span>\r\n          </div>\r\n          {this.canDeleteIt() && (\r\n            <div\r\n              onClick={this.deletePost}\r\n              className=\"d-inline-flex px-3 py-1 rounded-pill post__delete cursor-pointer\"\r\n            >\r\n              <span className=\"text-secondary\">\r\n                <i className=\"fas fa-times\"></i>\r\n              </span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst stateToProps = (state) => ({\r\n  logged: state.app.logged.isLogged,\r\n  session: state.app.logged,\r\n});\r\n\r\nconst dispatchToProps = (dispatch) => ({\r\n  deletePost: (data) => dispatch(deletePost(data)),\r\n  likePost: (postId) => dispatch(likePost(postId)),\r\n  unlikePost: (postId) => dispatch(unlikePost(postId)),\r\n});\r\n\r\nexport default connect(stateToProps, dispatchToProps)(withRouter(Post));\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Auth extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.shouldDisplay = this.shouldDisplay.bind(this);\r\n  }\r\n\r\n  shouldDisplay() {\r\n    const { whenLogged = true } = this.props;\r\n\r\n    return whenLogged === this.props.session.isLogged;\r\n  }\r\n\r\n  render() {\r\n    return <>{this.shouldDisplay() && this.props.children}</>;\r\n  }\r\n}\r\n\r\nconst stateToProps = (state) => ({\r\n  session: state.app.logged,\r\n});\r\n\r\nexport default connect(stateToProps)(Auth);\r\n"],"sourceRoot":""}