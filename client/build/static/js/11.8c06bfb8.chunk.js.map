{"version":3,"sources":["components/AuthForm.js","assets/images/logo.jpg","pages/Home.js"],"names":["AuthForm","props","handleSubmit","bind","e","preventDefault","user","username","target","value","password","this","onSuccess","onSubmit","disabled","isLoading","className","htmlFor","type","name","id","required","minLength","backMethod","onClick","Component","connect","state","isAuth","app","logged","isLogged","Home","signMode","phrases","extra","quote","selectedPhrase","getAuthComponent","setMenuMode","setLoginMode","setSignupMode","history","push","randomNumber","Math","floor","random","length","setState","signUp","signIn","alt","src","Logo","to","dispatch","toggleNavbar"],"mappings":"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","file":"static/js/11.8c06bfb8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass AuthForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const user = {\r\n      username: e.target.username.value,\r\n      password: e.target.password.value,\r\n    };\r\n\r\n    this.props.onSuccess({ ...user });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <fieldset disabled={this.props.isLoading}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\" className=\"mb-1 text-muted\">\r\n                <small>Username</small>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                id=\"username\"\r\n                className=\"form-control rounded-0\"\r\n                required\r\n                minLength=\"5\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\" className=\"mb-1 text-muted\">\r\n                <small>Password</small>\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                className=\"form-control rounded-0\"\r\n                required\r\n                minLength=\"5\"\r\n              />\r\n            </div>\r\n            <button className=\"btn btn-brand text-light float-right border-0 rounded-pill\">\r\n              {this.props.type === \"signup\" ? \"Sign Up\" : \"Login\"}\r\n            </button>\r\n            {this.props.backMethod && (\r\n              <button\r\n                onClick={this.props.backMethod}\r\n                type=\"button\"\r\n                className=\"btn btn-brand-secondary text-white float-right border-0 rounded-pill mx-3\"\r\n              >\r\n                Go back\r\n              </button>\r\n            )}\r\n          </fieldset>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst stateToProps = (state) => ({\r\n  isAuth: state.app.logged.isLogged,\r\n  isLoading: state.app.logged.isLoading,\r\n});\r\n\r\nexport default connect(stateToProps)(AuthForm);\r\n","export default __webpack_public_path__ + \"static/media/logo.a92650b3.jpg\";","import React, { Component } from \"react\";\r\nimport AuthForm from \"../components/AuthForm\";\r\nimport Logo from \"../assets/images/logo.jpg\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleNavbar } from \"../actions/app\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signIn } from \"../actions/app\";\r\nimport { signUp } from \"../actions/app\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signMode: \"menu\",\r\n      phrases: [\r\n        {\r\n          extra: \"William Shakespeare - All's Well That Ends Well\",\r\n          quote: \"What is a friend?\\nA single soul dwelling in two bodies.\",\r\n        },\r\n        {\r\n          extra: \"Aristotle\",\r\n          quote: \"Love all, trust a few, do wrong to none.\",\r\n        },\r\n        {\r\n          extra: \"Marcus Aurelius - Meditations\",\r\n          quote: \"The soul becomes dyed\\nwith the colour of its thoughts.\",\r\n        },\r\n        {\r\n          extra: \"Marcus Aurelius - Meditations\",\r\n          quote:\r\n            \"The happiness of your life depends\\nupon the quality of your thoughts.\",\r\n        },\r\n        {\r\n          extra: \"Marcus Aurelius - Meditations\",\r\n          quote:\r\n            \"The best revenge is to be\\nunlike him who performed the injury\",\r\n        },\r\n      ],\r\n      selectedPhrase: {},\r\n    };\r\n\r\n    this.getAuthComponent = this.getAuthComponent.bind(this);\r\n    this.setMenuMode = this.setMenuMode.bind(this);\r\n    this.setLoginMode = this.setLoginMode.bind(this);\r\n    this.setSignupMode = this.setSignupMode.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.isLogged) this.props.history.push(`/u/${this.props.user}`);\r\n\r\n    const randomNumber = Math.floor(Math.random() * this.state.phrases.length);\r\n    this.setState(() => ({\r\n      selectedPhrase: this.state.phrases[randomNumber],\r\n    }));\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.isLogged) this.props.history.push(`/u/${this.props.user}`);\r\n  }\r\n\r\n  setLoginMode() {\r\n    this.setState(() => ({ signMode: \"login\" }));\r\n  }\r\n\r\n  setMenuMode() {\r\n    this.setState(() => ({ signMode: \"menu\" }));\r\n  }\r\n\r\n  setSignupMode() {\r\n    this.setState(() => ({ signMode: \"signup\" }));\r\n  }\r\n\r\n  getAuthComponent() {\r\n    const signMode = this.state.signMode;\r\n\r\n    switch (signMode) {\r\n      case \"signup\":\r\n        return (\r\n          <AuthForm\r\n            type=\"signup\"\r\n            backMethod={this.setMenuMode}\r\n            onSuccess={this.props.signUp}\r\n          />\r\n        );\r\n      case \"login\":\r\n        return (\r\n          <AuthForm\r\n            type=\"login\"\r\n            backMethod={this.setMenuMode}\r\n            onSuccess={this.props.signIn}\r\n          />\r\n        );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home\">\r\n        <div className=\"row h-100\">\r\n          <div className=\"col-8 d-none d-md-flex flex-column justify-content-end pl-5 home__left\">\r\n            <h1 className=\"display-7  home__left__text\">\r\n              {this.state.selectedPhrase.quote}\r\n            </h1>\r\n            {!!this.state.selectedPhrase.extra && (\r\n              <p className=\" lead home__left__tex\">\r\n                {this.state.selectedPhrase.extra}\r\n              </p>\r\n            )}\r\n          </div>\r\n          <div className=\"col-12 col-md-4 bg-white home__right d-flex flex-column justify-content-center\">\r\n            <div className=\"row justify-content-center\">\r\n              <div className=\"col-6\">\r\n                <img alt='Logo' src={Logo} className=\"mx-auto d-block img-fluid\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"row pr-md-3\">\r\n              <div className=\"col-12 px-4\">\r\n                <div className=\"card border-0 rounded-0\">\r\n                  <div className=\"card-body\">\r\n                    {this.state.signMode === \"menu\" && (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-outline-brand btn-block rounded-pill\"\r\n                          onClick={this.setSignupMode}\r\n                        >\r\n                          Sign Up\r\n                        </button>\r\n                        <button\r\n                          className=\"btn btn-brand btn-block text-light rounded-pill\"\r\n                          onClick={this.setLoginMode}\r\n                        >\r\n                          Log In\r\n                        </button>\r\n                        <hr />\r\n                        <Link\r\n                          to=\"/explore\"\r\n                          className=\"btn btn-brand-secondary btn-block text-white rounded-pill\"\r\n                        >\r\n                          Let me Explore!!\r\n                        </Link>\r\n                      </div>\r\n                    )}\r\n                    {this.state.signMode !== \"menu\" && (\r\n                      <>{this.getAuthComponent()}</>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst stateToProps = (state) => ({\r\n  isLogged: state.app.logged.isLogged,\r\n  user: state.app.logged.username,\r\n});\r\n\r\nconst dispatchToProps = (dispatch) => ({\r\n  toggleNavbar: (value) => dispatch(toggleNavbar(value)),\r\n  signIn: (value) => dispatch(signIn(value)),\r\n  signUp: (value) => dispatch(signUp(value)),\r\n});\r\n\r\nexport default connect(stateToProps, dispatchToProps)(Home);\r\n"],"sourceRoot":""}